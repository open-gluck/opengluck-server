worker_processes 1;
daemon off;

error_log /dev/stderr;
pid /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  # include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /dev/stdout combined;
  sendfile on;
  server_tokens off;
  more_clear_headers Server;

  upstream backend_server {
    server 127.0.0.1:8081 fail_timeout=0;
  }

  upstream backend_app {
    server 127.0.0.1:3000 fail_timeout=0;
  }

  server {
    listen 8080 default_server;
    client_max_body_size 4G;
    keepalive_timeout 5;

    root /app/data/nginx/public;

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://backend_app;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /app/public;
    }

    location /opengluck {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://backend_server;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }
  }
}
